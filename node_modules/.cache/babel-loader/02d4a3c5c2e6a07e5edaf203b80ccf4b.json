{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/react-firebase/src/components/dashboard/Dashboard.js\";\nimport React from 'react';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nexport default class PostsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchPostsList = () => {\n      fetch(`http://localhost:3000/api/v1/projects`).then(response => response.json()).then(posts => this.setState({\n        posts\n      }));\n    };\n\n    this.handleDelete = postId => {\n      fetch(`/api/v1/posts/${postId}`, {\n        method: 'delete'\n      }).then(response => {\n        alert('Post deleted successfully');\n        this.fetchPostsList();\n      });\n    };\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchPostsList();\n  }\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"All Posts\"), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"Is Published\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, posts.map(post => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: post.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, post.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/posts/${post.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, post.title)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }, post.description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }, post.is_published ? 'Yes' : 'No'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.handleDelete(post.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, \"Delete\")));\n    }))));\n  }\n\n} // // import React ,{Component} from 'react'\n// import Notifications from './Notifications'\n// import ProjectList from '../projects/ProjectList'\n// import ProjectIndex from '../layout/ProjectIndex'\n// import {connect} from 'react-redux'\n// //for data ldisplay from db\n// import {firestoreConnect} from 'react-redux-firebase'\n// import {compose} from 'redux'\n// import axios from 'axios'\n// // import Project from './Project'\n// import React,{Component,useState,useEffect} from 'react'\n// // const Dashboard = () =>{\n// //     // const app = express();\n// //     // app.use(function(req, res, next) {\n// //     //     res.header(\"Access-Control-Allow-Origin\", \"*\");\n// //     //     res.header(\n// //     //       \"Access-Control-Allow-Headers\",\n// //     //       \"Origin, X-Requested-With, Content-Type, Accept\"\n// //     //     );\n// //     //     next();\n// //     //   });\n// //     const [projects, setProjects]=useState([])\n// //     useEffect(() =>{\n// //         axios.get('http://localhost:3000/api/v1/projects.json')\n// //         .then( resp => setProjects(resp.data.data.airlines))\n// //         .catch(resp =>console.log(\"resp\"))\n// //     }, [projects.lenth])\n// class Dashboard extends Component{\n//     //getting projects from store and passing as prop in PROJECTLIST\n//     constructor(props){\n//         super(props)\n//         this.state={\n//         project_modules:[\n//         ]\n//         }\n//     }\n//     componentDidMount(){\n//      axios.get('http://localhost:3000/api/v1/projects.json')\n//      .then(data => {\n//         debugger\n//        let res=[]\n//        data.data.data.map((data) =>{\n//          res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n//          this.setState({project_modules: res})\n//        })\n//      })\n//      .catch(data => {\n//         debugger\n//     })\n// }\n//         // const {projects} = this.props;\n//         // render(){\n//    render(){\n//     return(\n//         <div className=\"dashboard container\">\n//             <div className=\"row\">\n//                 <div className=\"col s12 m6\">\n//                     <h5>All Projects</h5>\n//                 <ProjectIndex project_modules={this.state.project_modules}/> \n//                     {/* <ProjectList projects={projects}/> */}\n//                 </div>\n//                 <div className=\"col s12 m5 offset-m1\">\n//                     {/* <Notifications /> */}\n//                 </div>\n//             </div>\n//         </div>\n//     )\n//    }\n// }\n// // const mapStateToProps = (state)=>{\n// //     console.log(state);\n// //     return{\n// //         // This is the dummy data fetcher line.project is from rootReducer and projects from projectReducer\n// //         // projects: state.project.projects\n// //         projects: state.firestore.ordered.projects\n// //     }\n// // }\n// // //passing function in connect and firestoreConnect will fetch data from db\n// // export default compose(\n// //     connect(mapStateToProps),\n// //     firestoreConnect([\n// //         {collection: 'projects'}\n// //     ])\n// // )(Dashboard)\n// export default Dashboard","map":{"version":3,"sources":["/home/dev/Desktop/react-firebase/src/components/dashboard/Dashboard.js"],"names":["React","compose","axios","Link","PostsList","Component","constructor","props","fetchPostsList","fetch","then","response","json","posts","setState","handleDelete","postId","method","alert","state","componentDidMount","render","map","post","id","title","description","is_published"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {compose} from 'redux'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom';\n\nexport default class PostsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { posts: [] };\n  }\n\n  componentDidMount() {\n    this.fetchPostsList();\n  }\n\n  fetchPostsList = () => {\n    fetch(`http://localhost:3000/api/v1/projects`).\n      then((response) => response.json()).\n      then((posts) =>  this.setState({ posts }));\n  };\n\n  handleDelete = (postId) => {\n    fetch(`/api/v1/posts/${postId}`, { method: 'delete' }).\n      then((response) => {\n        alert('Post deleted successfully')\n        this.fetchPostsList();\n      });\n  }\n\n\n\n\n  \n  render() {\n    const { posts } = this.state;\n    return (\n      <div>\n        <h3>All Posts</h3>\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Title</th>\n              <th>Description</th>\n              <th>Is Published</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n          {\n            posts.map((post) => {\n              return (\n                <tr key={post.id}>\n                  <td>{post.id}</td>\n                  <td>\n                    <Link to={`/posts/${post.id}`}>\n                      {post.title}\n                    </Link>\n                  </td>\n                  <td>{post.description}</td>\n                  <td>{post.is_published ? 'Yes' : 'No' }</td>\n                  <td>\n                    <button onClick={() => this.handleDelete(post.id) }>\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              )\n            })\n          }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // import React ,{Component} from 'react'\n// import Notifications from './Notifications'\n// import ProjectList from '../projects/ProjectList'\n// import ProjectIndex from '../layout/ProjectIndex'\n// import {connect} from 'react-redux'\n// //for data ldisplay from db\n// import {firestoreConnect} from 'react-redux-firebase'\n// import {compose} from 'redux'\n// import axios from 'axios'\n// // import Project from './Project'\n\n// import React,{Component,useState,useEffect} from 'react'\n\n\n// // const Dashboard = () =>{\n\n// //     // const app = express();\n// //     // app.use(function(req, res, next) {\n// //     //     res.header(\"Access-Control-Allow-Origin\", \"*\");\n// //     //     res.header(\n// //     //       \"Access-Control-Allow-Headers\",\n// //     //       \"Origin, X-Requested-With, Content-Type, Accept\"\n// //     //     );\n// //     //     next();\n// //     //   });\n\n\n// //     const [projects, setProjects]=useState([])\n// //     useEffect(() =>{\n        \n// //         axios.get('http://localhost:3000/api/v1/projects.json')\n// //         .then( resp => setProjects(resp.data.data.airlines))\n        \n// //         .catch(resp =>console.log(\"resp\"))\n\n// //     }, [projects.lenth])\n\n\n// class Dashboard extends Component{\n//     //getting projects from store and passing as prop in PROJECTLIST\n//     constructor(props){\n//         super(props)\n\n//         this.state={\n\n//         project_modules:[\n//         ]\n//         }\n//     }\n//     componentDidMount(){\n//      axios.get('http://localhost:3000/api/v1/projects.json')\n//      .then(data => {\n//         debugger\n//        let res=[]\n//        data.data.data.map((data) =>{\n\n//          res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n//          this.setState({project_modules: res})\n\n//        })\n//      })\n//      .catch(data => {\n//         debugger\n//     })\n// }\n\n\n\n//         // const {projects} = this.props;\n//         // render(){\n//    render(){\n//     return(\n//         <div className=\"dashboard container\">\n//             <div className=\"row\">\n//                 <div className=\"col s12 m6\">\n//                     <h5>All Projects</h5>\n//                 <ProjectIndex project_modules={this.state.project_modules}/> \n//                     {/* <ProjectList projects={projects}/> */}\n//                 </div>\n//                 <div className=\"col s12 m5 offset-m1\">\n//                     {/* <Notifications /> */}\n//                 </div>\n//             </div>\n//         </div>\n//     )\n//    }\n    \n// }\n\n// // const mapStateToProps = (state)=>{\n// //     console.log(state);\n// //     return{\n// //         // This is the dummy data fetcher line.project is from rootReducer and projects from projectReducer\n// //         // projects: state.project.projects\n// //         projects: state.firestore.ordered.projects\n// //     }\n// // }\n// // //passing function in connect and firestoreConnect will fetch data from db\n// // export default compose(\n// //     connect(mapStateToProps),\n// //     firestoreConnect([\n// //         {collection: 'projects'}\n// //     ])\n// // )(Dashboard)\n// export default Dashboard"]},"metadata":{},"sourceType":"module"}