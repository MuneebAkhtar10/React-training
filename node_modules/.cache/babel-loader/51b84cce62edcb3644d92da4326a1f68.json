{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/react-firebase/src/components/dashboard/Dashboard.js\";\nimport React from 'react';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport DashboardCss from './DashboardCss.css';\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchPostsList = () => {\n      axios.get('http://localhost:3000/api/v1/projects.json').then(data => {\n        let res = [];\n        console.log(res);\n        data.data.data.map(data => {\n          res.push({\n            id: data.id,\n            title: data.title,\n            body: data.body,\n            user_id: data.user_id\n          });\n          this.setState({\n            posts: res\n          });\n        });\n      }).catch(data => {\n        debugger;\n      });\n    };\n\n    this.handleDelete = postId => {\n      console.log(postId);\n      axios.delete(`http://localhost:3000/api/v1/projects/${postId}`).then(response => {\n        alert('Post deleted successfully');\n        this.fetchPostsList();\n      });\n    };\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchPostsList();\n  }\n\n  // componentDidMount() {\n  //   axios.get('http://localhost:3000/api/v1/projects.json')\n  //        .then(data => {\n  //          let res=[]\n  //          console.log(res)\n  //          data.data.data.map((data) =>{\n  //            res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n  //            this.setState({posts: res})\n  //          })\n  //        })\n  //        .catch(data => {\n  //           debugger\n  //       })\n  // }\n  // fetch(`localhost:3000/api/v1/projects/${postId}`, { method: 'delete' }).\n  //   then((response) => {\n  //     alert('Post deleted successfully')\n  //     this.fetchPostsList();\n  //   });\n  render() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"All Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"tbl-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      cellpadding: \"0\",\n      cellspacing: \"0\",\n      border: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"Body\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Action\"))))), posts.map(post => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"tbl-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        cellpadding: \"0\",\n        cellspacing: \"0\",\n        border: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        key: post.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, post.id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/project/${post.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, post.title)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, post.body), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        class: \"btn-gradient black small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/projects/${post.id}/edit`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 70\n        }\n      }, \"edit\")), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.handleDelete(post.id),\n        class: \"btn-gradient red small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }\n      }, \"Delete\"))))));\n    }));\n  }\n\n} // // import React ,{Component} from 'react'\n// import Notifications from './Notifications'\n// import ProjectList from '../projects/ProjectList'\n// import ProjectIndex from '../layout/ProjectIndex'\n// import {connect} from 'react-redux'\n// //for data ldisplay from db\n// import {firestoreConnect} from 'react-redux-firebase'\n// import {compose} from 'redux'\n// import axios from 'axios'\n// // import Project from './Project'\n// import React,{Component,useState,useEffect} from 'react'\n// // const Dashboard = () =>{\n// //     // const app = express();\n// //     // app.use(function(req, res, next) {\n// //     //     res.header(\"Access-Control-Allow-Origin\", \"*\");\n// //     //     res.header(\n// //     //       \"Access-Control-Allow-Headers\",\n// //     //       \"Origin, X-Requested-With, Content-Type, Accept\"\n// //     //     );\n// //     //     next();\n// //     //   });\n// //     const [projects, setProjects]=useState([])\n// //     useEffect(() =>{\n// //         axios.get('http://localhost:3000/api/v1/projects.json')\n// //         .then( resp => setProjects(resp.data.data.airlines))\n// //         .catch(resp =>console.log(\"resp\"))\n// //     }, [projects.lenth])\n// class Dashboard extends Component{\n//     //getting projects from store and passing as prop in PROJECTLIST\n//     constructor(props){\n//         super(props)\n//         this.state={\n//         project_modules:[\n//         ]\n//         }\n//     }\n//     componentDidMount(){\n//      axios.get('http://localhost:3000/api/v1/projects.json')\n//      .then(data => {\n//         debugger\n//        let res=[]\n//        data.data.data.map((data) =>{\n//          res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n//          this.setState({project_modules: res})\n//        })\n//      })\n//      .catch(data => {\n//         debugger\n//     })\n// }\n//         // const {projects} = this.props;\n//         // render(){\n//    render(){\n//     return(\n//         <div className=\"dashboard container\">\n//             <div className=\"row\">\n//                 <div className=\"col s12 m6\">\n//                     <h5>All Projects</h5>\n//                 <ProjectIndex project_modules={this.state.project_modules}/> \n//                     {/* <ProjectList projects={projects}/> */}\n//                 </div>\n//                 <div className=\"col s12 m5 offset-m1\">\n//                     {/* <Notifications /> */}\n//                 </div>\n//             </div>\n//         </div>\n//     )\n//    }\n// }\n// // const mapStateToProps = (state)=>{\n// //     console.log(state);\n// //     return{\n// //         // This is the dummy data fetcher line.project is from rootReducer and projects from projectReducer\n// //         // projects: state.project.projects\n// //         projects: state.firestore.ordered.projects\n// //     }\n// // }\n// // //passing function in connect and firestoreConnect will fetch data from db\n// // export default compose(\n// //     connect(mapStateToProps),\n// //     firestoreConnect([\n// //         {collection: 'projects'}\n// //     ])\n// // )(Dashboard)\n// export default Dashboard","map":{"version":3,"sources":["/home/dev/Desktop/react-firebase/src/components/dashboard/Dashboard.js"],"names":["React","compose","axios","Link","DashboardCss","Dashboard","Component","constructor","props","fetchPostsList","get","then","data","res","console","log","map","push","id","title","body","user_id","setState","posts","catch","handleDelete","postId","delete","response","alert","state","componentDidMount","render","post"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {compose} from 'redux'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom';\nimport DashboardCss from './DashboardCss.css'\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { posts: [] };\n  }\n\n  componentDidMount() {\n    this.fetchPostsList();\n  }\n\n  fetchPostsList = () => {\n    axios.get('http://localhost:3000/api/v1/projects.json')\n           .then(data => {\n             let res=[]\n             console.log(res)\n             data.data.data.map((data) =>{\n      \n               res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n               this.setState({posts: res})\n      \n             })\n           })\n           .catch(data => {\n              debugger\n          })\n    }\n\n  handleDelete = (postId) => {\n    console.log(postId)\n    axios.delete(`http://localhost:3000/api/v1/projects/${postId}`).\n      then((response) => {\n        alert('Post deleted successfully')\n        this.fetchPostsList();\n      })\n  }\n  // componentDidMount() {\n  //   axios.get('http://localhost:3000/api/v1/projects.json')\n  //        .then(data => {\n  //          let res=[]\n  //          console.log(res)\n  //          data.data.data.map((data) =>{\n    \n  //            res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n  //            this.setState({posts: res})\n    \n  //          })\n  //        })\n  //        .catch(data => {\n  //           debugger\n  //       })\n  // }\n\n\n    // fetch(`localhost:3000/api/v1/projects/${postId}`, { method: 'delete' }).\n    //   then((response) => {\n    //     alert('Post deleted successfully')\n    //     this.fetchPostsList();\n    //   });\n  \n\n  render() {\n    const { posts } = this.state;\n    return (\n      <section>\n        <h3>All Projects</h3>\n        <div class=\"tbl-header\">\n          <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Title</th>\n              <th>Body</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          </table>\n        </div>\n          {\n            posts.map((post) => {\n              return (\n              <div class=\"tbl-content\">\n                <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n                  <tbody>\n                    <tr key={post.id}>\n                        <td>{post.id}</td>\n                        <td>\n                        <Link to={`/project/${post.id}`}>\n                        {post.title}\n                        </Link>\n                        </td>\n                        <td>{post.body}</td>\n                        <td>\n                            <button class=\"btn-gradient black small\"><Link to={`/projects/${post.id}/edit`} >\n                              edit\n                            </Link>             \n                            </button>\n                        \n                            <button onClick={() => this.handleDelete(post.id) } class=\"btn-gradient red small\">\n                            Delete\n                            </button>\n                        </td>\n                    </tr> \n                </tbody>\n              </table>\n            </div>\n         )\n        })\n      }\n      </section>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // import React ,{Component} from 'react'\n// import Notifications from './Notifications'\n// import ProjectList from '../projects/ProjectList'\n// import ProjectIndex from '../layout/ProjectIndex'\n// import {connect} from 'react-redux'\n// //for data ldisplay from db\n// import {firestoreConnect} from 'react-redux-firebase'\n// import {compose} from 'redux'\n// import axios from 'axios'\n// // import Project from './Project'\n\n// import React,{Component,useState,useEffect} from 'react'\n\n\n// // const Dashboard = () =>{\n\n// //     // const app = express();\n// //     // app.use(function(req, res, next) {\n// //     //     res.header(\"Access-Control-Allow-Origin\", \"*\");\n// //     //     res.header(\n// //     //       \"Access-Control-Allow-Headers\",\n// //     //       \"Origin, X-Requested-With, Content-Type, Accept\"\n// //     //     );\n// //     //     next();\n// //     //   });\n\n\n// //     const [projects, setProjects]=useState([])\n// //     useEffect(() =>{\n        \n// //         axios.get('http://localhost:3000/api/v1/projects.json')\n// //         .then( resp => setProjects(resp.data.data.airlines))\n        \n// //         .catch(resp =>console.log(\"resp\"))\n\n// //     }, [projects.lenth])\n\n\n// class Dashboard extends Component{\n//     //getting projects from store and passing as prop in PROJECTLIST\n//     constructor(props){\n//         super(props)\n\n//         this.state={\n\n//         project_modules:[\n//         ]\n//         }\n//     }\n//     componentDidMount(){\n//      axios.get('http://localhost:3000/api/v1/projects.json')\n//      .then(data => {\n//         debugger\n//        let res=[]\n//        data.data.data.map((data) =>{\n\n//          res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n//          this.setState({project_modules: res})\n\n//        })\n//      })\n//      .catch(data => {\n//         debugger\n//     })\n// }\n\n\n\n//         // const {projects} = this.props;\n//         // render(){\n//    render(){\n//     return(\n//         <div className=\"dashboard container\">\n//             <div className=\"row\">\n//                 <div className=\"col s12 m6\">\n//                     <h5>All Projects</h5>\n//                 <ProjectIndex project_modules={this.state.project_modules}/> \n//                     {/* <ProjectList projects={projects}/> */}\n//                 </div>\n//                 <div className=\"col s12 m5 offset-m1\">\n//                     {/* <Notifications /> */}\n//                 </div>\n//             </div>\n//         </div>\n//     )\n//    }\n    \n// }\n\n// // const mapStateToProps = (state)=>{\n// //     console.log(state);\n// //     return{\n// //         // This is the dummy data fetcher line.project is from rootReducer and projects from projectReducer\n// //         // projects: state.project.projects\n// //         projects: state.firestore.ordered.projects\n// //     }\n// // }\n// // //passing function in connect and firestoreConnect will fetch data from db\n// // export default compose(\n// //     connect(mapStateToProps),\n// //     firestoreConnect([\n// //         {collection: 'projects'}\n// //     ])\n// // )(Dashboard)\n// export default Dashboard"]},"metadata":{},"sourceType":"module"}