{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/react-firebase/src/components/projects/CreateProject.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport ProjectCss from './ProjectCss.css';\nexport default class CreateProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log([event.target.name]);\n    };\n\n    this.createPostRequest = event => {\n      axios.get(`http://localhost:3000/api/v1/projects`, {\n        method: 'post',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(data => {\n        let res = [];\n        console.log(res);\n        data.data.data.map(data => {\n          res.push({\n            id: data.id,\n            title: data.title,\n            body: data.body,\n            user_id: data.user_id\n          });\n          this.setState({\n            posts: res\n          });\n        });\n      }).catch(data => {\n        debugger;\n      });\n    };\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  //   createPostRequest = (event) => {\n  //     console.log('this.state', this.state);\n  //     axios.get(`http://localhost:3000/api/v1/projects`,{method: 'post',\n  //     body: JSON.stringify(this.state),\n  //     headers: { 'Content-Type': 'application/json' },\n  //     })\n  //     .then(data => {\n  //     let res=[]\n  //     console.log(res)\n  //     data.map((data) =>{\n  //     res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n  //     this.setState({post: res})\n  //     })\n  //     })\n  //     .catch(data => {  \n  //         debugger\n  //         })\n  //     }\n  // handleClick() {\n  //     var title = this.type.title.value;\n  //     var body = this.type.body.value;\n  //     $.ajax({\n  //         url: \"http://localhost:3000/api/v1/projects\",\n  //         type: \"POST\",\n  //         data: { project: { title: title, body: body } },\n  //         success: response => {\n  //         console.log(\"it worked!\", response);\n  //         }\n  //     });\n  // }\n  componentDidMount() {\n    axios.get('http://localhost:3000/api/v1/projects.json').then(data => {\n      let res = [];\n      console.log(res);\n      data.data.data.map(data => {\n        res.push({\n          id: data.id,\n          title: data.title,\n          body: data.body,\n          user_id: data.user_id\n        });\n        this.setState({\n          posts: res\n        });\n      });\n    }).catch(data => {\n      debugger;\n    });\n  }\n\n  render() {\n    const {\n      title,\n      body\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"New Project\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"title\",\n      type: \"text\",\n      name: \"title\",\n      value: title,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Description: \"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"body\",\n      type: \"text\",\n      name: \"body\",\n      value: body,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createPostRequest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"Create\"));\n  }\n\n} // import React, {Component}from 'react'\n// import {Link} from 'react-router-dom'\n// import {connect} from 'react-redux'\n// //now using store actions \n// import {createProject} from '../../store/actions/projectActions'\n// import axios from 'axios'\n// class CreateProject extends Component {\n// state={\n//     title:\"\",\n//     body:\"\"\n// }\n// // this will set the state on change in input fields\n// handleChange = (e)=>{\n//     this.setState({\n//         [e.target.id]: e.target.value\n//     })\n//     // setProject(Object.assign({},project,{[e.target.id]:e.target.value}))\n// }\n// handleSubmit =(e) =>{\n//     e.preventDefault();\n//     // when we click on submit it will use action\n//     //create project \n//     // const project_id= project.data.id;\n//     console.log(\"wfrer\")\n//     axios.post('http://localhost:3000/api/v1/projects.json',{[e.target.id]: e.target.value})\n//     .then(resp =>{\n//         console.log(\"Api Working\")\n//     })\n//     .catch(resp => {})\n//         console.log(\"kakaak\")\n//     // this.props.createProject(this.state)\n// }\n// render(){\n//     return(\n//         <div className=\"container\">\n//             <form onSubmit={this.handleSubmit} className=\"white\">\n//                 <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n//                 <div className=\"input-field\">\n//                     <label htmlFor=\"title\">Title</label>\n//                     <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n//                 </div>\n//                 <div className=\"input-field\">\n//                     <label htmlFor=\"body\">Project Content</label>\n//                     <textarea className=\"materialize-textarea\" id=\"body\" onChange={this.handleChange}/>\n//                 </div>\n//                 <div className=\"input-field\">\n//                     <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Create</button>\n//                 </div>\n//             </form>\n//         </div>\n//         )\n//     }\n// }\n// // //when submit button is clicked it will run on projectActoin\n// // const mapDispatchToProps = (dispatch) =>{\n// //     return{\n// //         createProject: (project) => dispatch(createProject(project))\n// //     }\n// // }\n// // export default connect(null,mapDispatchToProps)(CreateProject)\n// export default CreateProject","map":{"version":3,"sources":["/home/dev/Desktop/react-firebase/src/components/projects/CreateProject.js"],"names":["React","Redirect","axios","ProjectCss","CreateProject","Component","constructor","props","handleInputChange","event","setState","target","name","value","console","log","createPostRequest","get","method","body","JSON","stringify","state","headers","then","data","res","map","push","id","title","user_id","posts","catch","componentDidMount","render"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport axios from 'axios'\nimport ProjectCss from './ProjectCss.css'\n\nexport default class CreateProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [] \n    };\n\n    }\n\n  handleInputChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n    console.log([event.target.name])\n  }\n\n//   createPostRequest = (event) => {\n//     console.log('this.state', this.state);\n//     axios.get(`http://localhost:3000/api/v1/projects`,{method: 'post',\n//     body: JSON.stringify(this.state),\n//     headers: { 'Content-Type': 'application/json' },\n//     })\n//     .then(data => {\n\n//     let res=[]\n//     console.log(res)\n//     data.map((data) =>{\n\n//     res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n//     this.setState({post: res})\n//     })\n//     })\n//     .catch(data => {  \n//         debugger\n//         })\n//     }\n\n    // handleClick() {\n    //     var title = this.type.title.value;\n    //     var body = this.type.body.value;\n    //     $.ajax({\n    //         url: \"http://localhost:3000/api/v1/projects\",\n    //         type: \"POST\",\n    //         data: { project: { title: title, body: body } },\n    //         success: response => {\n    //         console.log(\"it worked!\", response);\n    //         }\n    //     });\n    // }\n\n\n    componentDidMount() {\n      axios.get('http://localhost:3000/api/v1/projects.json')\n           .then(data => {\n             let res=[]\n             console.log(res)\n             data.data.data.map((data) =>{\n      \n               res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n               this.setState({posts: res})\n      \n             })\n           })\n           .catch(data => {\n              debugger\n          })\n    }\n\n    createPostRequest = (event) => {\n\n     axios.get(`http://localhost:3000/api/v1/projects`,{method: 'post',\n        body: JSON.stringify(this.state),\n        headers: { \n            'Content-Type': 'application/json' \n\n        },\n        })\n        .then(data => {\n          let res=[]\n          console.log(res)\n          data.data.data.map((data) =>{\n   \n            res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n            this.setState({posts: res})\n   \n          })\n        })\n        .catch(data => {\n           debugger\n       }) \n    }  \n\n  render() {\n    const {title, body} = this.state;\n    return (\n      <div>\n        <h3>New Project</h3>\n        <div>\n          <label>Title: </label>\n          <input\n            ref=\"title\"\n            type='text'\n            name='title'\n            value={title}\n            onChange={this.handleInputChange}\n            />\n        </div>\n        <div>\n          <label>Description: </label>\n          <input\n            ref=\"body\"\n            type='text'\n            name='body'\n            value={body}\n            onChange={this.handleInputChange}\n            />\n        </div>\n        <button onClick={this.createPostRequest}>Create</button>\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, {Component}from 'react'\n// import {Link} from 'react-router-dom'\n\n// import {connect} from 'react-redux'\n// //now using store actions \n// import {createProject} from '../../store/actions/projectActions'\n// import axios from 'axios'\n\n\n// class CreateProject extends Component {\n// state={\n//     title:\"\",\n//     body:\"\"\n// }\n\n// // this will set the state on change in input fields\n// handleChange = (e)=>{\n//     this.setState({\n//         [e.target.id]: e.target.value\n//     })\n//     // setProject(Object.assign({},project,{[e.target.id]:e.target.value}))\n\n// }\n// handleSubmit =(e) =>{\n//     e.preventDefault();\n//     // when we click on submit it will use action\n//     //create project \n//     // const project_id= project.data.id;\n//     console.log(\"wfrer\")\n//     axios.post('http://localhost:3000/api/v1/projects.json',{[e.target.id]: e.target.value})\n//     .then(resp =>{\n//         console.log(\"Api Working\")\n//     })\n//     .catch(resp => {})\n//         console.log(\"kakaak\")\n//     // this.props.createProject(this.state)\n// }\n// render(){\n//     return(\n\n//         <div className=\"container\">\n//             <form onSubmit={this.handleSubmit} className=\"white\">\n//                 <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n//                 <div className=\"input-field\">\n//                     <label htmlFor=\"title\">Title</label>\n//                     <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n//                 </div>\n        \n//                 <div className=\"input-field\">\n//                     <label htmlFor=\"body\">Project Content</label>\n//                     <textarea className=\"materialize-textarea\" id=\"body\" onChange={this.handleChange}/>\n//                 </div>\n\n//                 <div className=\"input-field\">\n//                     <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Create</button>\n//                 </div>\n//             </form>\n//         </div>\n//         )\n//     }\n// }\n// // //when submit button is clicked it will run on projectActoin\n// // const mapDispatchToProps = (dispatch) =>{\n// //     return{\n// //         createProject: (project) => dispatch(createProject(project))\n// //     }\n// // }\n\n// // export default connect(null,mapDispatchToProps)(CreateProject)\n// export default CreateProject"]},"metadata":{},"sourceType":"module"}