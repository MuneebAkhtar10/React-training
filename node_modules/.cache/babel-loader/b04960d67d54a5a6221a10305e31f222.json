{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/react-firebase/src/components/dashboard/Dashboard.js\";\n// import React ,{Component} from 'react'\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport ProjectIndex from '../layout/ProjectIndex';\nimport { connect } from 'react-redux'; //for data ldisplay from db\n\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport React, { Component, useState, useEffect } from 'react'; // const Dashboard = () =>{\n//     // const app = express();\n//     // app.use(function(req, res, next) {\n//     //     res.header(\"Access-Control-Allow-Origin\", \"*\");\n//     //     res.header(\n//     //       \"Access-Control-Allow-Headers\",\n//     //       \"Origin, X-Requested-With, Content-Type, Accept\"\n//     //     );\n//     //     next();\n//     //   });\n//     const [projects, setProjects]=useState([])\n//     useEffect(() =>{\n//         axios.get('http://localhost:3000/api/v1/projects.json')\n//         .then(resp => {\n//             setProjects(resp.data.data)\n//         })\n//         .catch(resp =>console.log())\n//     }, [projects.lenth])\n//     const list = projects.map(item =>{\n//         return (<li key={item.title}> {item.body}</li>)\n//     })\n\nclass Dashboard extends Component {\n  //getting projects from store and passing as prop in PROJECTLIST\n  constructor(props) {\n    super(props);\n    this.state = {\n      project_modules: [{\n        id: 1,\n        title: \"wrjfb\",\n        body: \"ahhaha\",\n        user_id: \"\"\n      }, {\n        id: 2,\n        title: \"rtgrt\",\n        body: \"ahfhaha\",\n        user_id: \"1\"\n      }, {\n        id: 3,\n        title: \"rtgrt\",\n        body: \"ahfhaha\",\n        user_id: \"1\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3000/api/v1/projects.json').then(data => {\n      debugger;\n      let res = [];\n      data.data.data.map(data => {\n        res.push({\n          id: data.id,\n          title: data.title,\n          body: data.body,\n          user_id: data.user_id\n        });\n        this.setState({\n          project_modules: res\n        });\n      });\n    }).catch(data => {\n      debugger;\n    });\n  } // const {projects} = this.props;\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12 m6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, \"All Projects\"), /*#__PURE__*/React.createElement(ProjectList, {\n      projects: projects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12 m5 offset-m1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    })));\n  }\n\n} // const mapStateToProps = (state)=>{\n//     console.log(state);\n//     return{\n//         // This is the dummy data fetcher line.project is from rootReducer and projects from projectReducer\n//         // projects: state.project.projects\n//         projects: state.firestore.ordered.projects\n//     }\n// }\n// //passing function in connect and firestoreConnect will fetch data from db\n// export default compose(\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         {collection: 'projects'}\n//     ])\n// )(Dashboard)\n\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/dev/Desktop/react-firebase/src/components/dashboard/Dashboard.js"],"names":["Notifications","ProjectList","ProjectIndex","connect","firestoreConnect","compose","axios","React","Component","useState","useEffect","Dashboard","constructor","props","state","project_modules","id","title","body","user_id","componentDidMount","get","then","data","res","map","push","setState","catch","render","projects"],"mappings":";AAAA;AACA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,SAAjC,QAAiD,OAAjD,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAiC;AAC7B;AACAI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AAEXC,MAAAA,eAAe,EAAC,CACZ;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC,OAAZ;AAAoBC,QAAAA,IAAI,EAAC,QAAzB;AAAkCC,QAAAA,OAAO,EAAC;AAA1C,OADY,EAEZ;AAACH,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC,OAAZ;AAAoBC,QAAAA,IAAI,EAAC,SAAzB;AAAmCC,QAAAA,OAAO,EAAC;AAA3C,OAFY,EAGZ;AAACH,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC,OAAZ;AAAoBC,QAAAA,IAAI,EAAC,SAAzB;AAAmCC,QAAAA,OAAO,EAAC;AAA3C,OAHY;AAFL,KAAX;AAQH;;AACDC,EAAAA,iBAAiB,GAAE;AAClBd,IAAAA,KAAK,CAACe,GAAN,CAAU,4CAAV,EACCC,IADD,CACMC,IAAI,IAAI;AACX;AACD,UAAIC,GAAG,GAAC,EAAR;AACAD,MAAAA,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeE,GAAf,CAAoBF,IAAD,IAAS;AAE1BC,QAAAA,GAAG,CAACE,IAAJ,CAAS;AAACV,UAAAA,EAAE,EAAEO,IAAI,CAACP,EAAV;AAAeC,UAAAA,KAAK,EAAEM,IAAI,CAACN,KAA3B;AAAkCC,UAAAA,IAAI,EAAEK,IAAI,CAACL,IAA7C;AAAmDC,UAAAA,OAAO,EAAEI,IAAI,CAACJ;AAAjE,SAAT;AACA,aAAKQ,QAAL,CAAc;AAACZ,UAAAA,eAAe,EAAES;AAAlB,SAAd;AAED,OALD;AAMD,KAVD,EAWCI,KAXD,CAWOL,IAAI,IAAI;AACZ;AACH,KAbA;AAcJ,GA7BgC,CAiCzB;;;AACAM,EAAAA,MAAM,GAAE;AACZ,wBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAEC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CADJ;AAaC;;AAhD4B,C,CAmDjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAenB,SAAf","sourcesContent":["// import React ,{Component} from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport ProjectIndex from '../layout/ProjectIndex'\nimport {connect} from 'react-redux'\n//for data ldisplay from db\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport axios from 'axios'\n\nimport React,{Component,useState,useEffect} from 'react'\n\n\n// const Dashboard = () =>{\n\n//     // const app = express();\n//     // app.use(function(req, res, next) {\n//     //     res.header(\"Access-Control-Allow-Origin\", \"*\");\n//     //     res.header(\n//     //       \"Access-Control-Allow-Headers\",\n//     //       \"Origin, X-Requested-With, Content-Type, Accept\"\n//     //     );\n//     //     next();\n//     //   });\n\n\n//     const [projects, setProjects]=useState([])\n//     useEffect(() =>{\n        \n//         axios.get('http://localhost:3000/api/v1/projects.json')\n//         .then(resp => {\n//             setProjects(resp.data.data)\n//         })\n//         .catch(resp =>console.log())\n\n//     }, [projects.lenth])\n\n//     const list = projects.map(item =>{\n//         return (<li key={item.title}> {item.body}</li>)\n//     })\n\nclass Dashboard extends Component{\n    //getting projects from store and passing as prop in PROJECTLIST\n    constructor(props){\n        super(props)\n\n        this.state={\n\n        project_modules:[\n            {id:1,title:\"wrjfb\",body:\"ahhaha\",user_id:\"\"},\n            {id:2,title:\"rtgrt\",body:\"ahfhaha\",user_id:\"1\"},\n            {id:3,title:\"rtgrt\",body:\"ahfhaha\",user_id:\"1\"},\n        ]\n        }\n    }\n    componentDidMount(){\n     axios.get('http://localhost:3000/api/v1/projects.json')\n     .then(data => {\n        debugger\n       let res=[]\n       data.data.data.map((data) =>{\n\n         res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n         this.setState({project_modules: res})\n\n       })\n     })\n     .catch(data => {\n        debugger\n    })\n}\n\n\n\n        // const {projects} = this.props;\n        render(){\n    return(\n        <div className=\"dashboard container\">\n            <div className=\"row\">\n                <div className=\"col s12 m6\">\n                    <h5>All Projects</h5>\n                    <ProjectList projects={projects}/>\n                </div>\n                <div className=\"col s12 m5 offset-m1\">\n                    {/* <Notifications /> */}\n                </div>\n            </div>\n        </div>\n    )\n    }\n}\n\n// const mapStateToProps = (state)=>{\n//     console.log(state);\n//     return{\n//         // This is the dummy data fetcher line.project is from rootReducer and projects from projectReducer\n//         // projects: state.project.projects\n//         projects: state.firestore.ordered.projects\n//     }\n// }\n// //passing function in connect and firestoreConnect will fetch data from db\n// export default compose(\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         {collection: 'projects'}\n//     ])\n// )(Dashboard)\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}