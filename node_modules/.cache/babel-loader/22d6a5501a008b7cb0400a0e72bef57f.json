{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/react-firebase/src/components/projects/CreateProject.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nexport default class CreateProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.createPostRequest = event => {\n      console.log('this.state', this.state);\n      axios.get(`http://localhost:3000/api/v1/projects`, {\n        method: 'post',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(data => {\n        let res = [];\n        console.log(res);\n        data.map(data => {\n          res.push({\n            id: data.id,\n            title: data.title,\n            body: data.body,\n            user_id: data.user_id\n          });\n          this.setState({\n            post: res\n          });\n        });\n      }).catch(data => {\n        debugger;\n      });\n    };\n\n    this.state = {\n      title: '',\n      body: ''\n    };\n  }\n\n  // fetch('http://localhost:3000/api/v1/projects', {\n  //   method: 'post',\n  //   body: JSON.stringify(this.state),\n  //   headers: { 'Content-Type': 'application/json' },\n  // }).then((response) => {\n  //   alert('Project created successfully');\n  // });\n  render() {\n    const {\n      title,\n      description\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"New Project\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: title,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Description: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: description,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createPostRequest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Create\"));\n  }\n\n} // import React, {Component}from 'react'\n// import {Link} from 'react-router-dom'\n// import {connect} from 'react-redux'\n// //now using store actions \n// import {createProject} from '../../store/actions/projectActions'\n// import axios from 'axios'\n// class CreateProject extends Component {\n// state={\n//     title:\"\",\n//     body:\"\"\n// }\n// // this will set the state on change in input fields\n// handleChange = (e)=>{\n//     this.setState({\n//         [e.target.id]: e.target.value\n//     })\n//     // setProject(Object.assign({},project,{[e.target.id]:e.target.value}))\n// }\n// handleSubmit =(e) =>{\n//     e.preventDefault();\n//     // when we click on submit it will use action\n//     //create project \n//     // const project_id= project.data.id;\n//     console.log(\"wfrer\")\n//     axios.post('http://localhost:3000/api/v1/projects.json',{[e.target.id]: e.target.value})\n//     .then(resp =>{\n//         console.log(\"Api Working\")\n//     })\n//     .catch(resp => {})\n//         console.log(\"kakaak\")\n//     // this.props.createProject(this.state)\n// }\n// render(){\n//     return(\n//         <div className=\"container\">\n//             <form onSubmit={this.handleSubmit} className=\"white\">\n//                 <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n//                 <div className=\"input-field\">\n//                     <label htmlFor=\"title\">Title</label>\n//                     <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n//                 </div>\n//                 <div className=\"input-field\">\n//                     <label htmlFor=\"body\">Project Content</label>\n//                     <textarea className=\"materialize-textarea\" id=\"body\" onChange={this.handleChange}/>\n//                 </div>\n//                 <div className=\"input-field\">\n//                     <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Create</button>\n//                 </div>\n//             </form>\n//         </div>\n//         )\n//     }\n// }\n// // //when submit button is clicked it will run on projectActoin\n// // const mapDispatchToProps = (dispatch) =>{\n// //     return{\n// //         createProject: (project) => dispatch(createProject(project))\n// //     }\n// // }\n// // export default connect(null,mapDispatchToProps)(CreateProject)\n// export default CreateProject","map":{"version":3,"sources":["/home/dev/Desktop/react-firebase/src/components/projects/CreateProject.js"],"names":["React","Redirect","axios","CreateProject","Component","constructor","props","handleInputChange","event","setState","target","name","value","createPostRequest","console","log","state","get","method","body","JSON","stringify","headers","then","data","res","map","push","id","title","user_id","post","catch","render","description"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport axios from 'axios'\nexport default class CreateProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: '',\n    }\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  createPostRequest = (event) => {\n    console.log('this.state', this.state);\n    axios.get(`http://localhost:3000/api/v1/projects`,{method: 'post',\n    body: JSON.stringify(this.state),\n    headers: { 'Content-Type': 'application/json' },\n    })\n    .then(data => {\n\n    let res=[]\n    console.log(res)\n    data.map((data) =>{\n\n    res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n    this.setState({post: res})\n    })\n    })\n    .catch(data => {  \n        debugger\n        })\n    }\n  \n    // fetch('http://localhost:3000/api/v1/projects', {\n    //   method: 'post',\n    //   body: JSON.stringify(this.state),\n    //   headers: { 'Content-Type': 'application/json' },\n    // }).then((response) => {\n    //   alert('Project created successfully');\n    // });\n  \n\n  render() {\n    const {title, description} = this.state;\n    return (\n      <div>\n        <h3>New Project</h3>\n        <div>\n          <label>Title: </label>\n          <input\n            type='text'\n            name='title'\n            value={title}\n            onChange={this.handleInputChange}\n            />\n        </div>\n        <div>\n          <label>Description: </label>\n          <input\n            type='text'\n            name='description'\n            value={description}\n            onChange={this.handleInputChange}\n            />\n        </div>\n        <button onClick={this.createPostRequest}>Create</button>\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, {Component}from 'react'\n// import {Link} from 'react-router-dom'\n\n// import {connect} from 'react-redux'\n// //now using store actions \n// import {createProject} from '../../store/actions/projectActions'\n// import axios from 'axios'\n\n\n// class CreateProject extends Component {\n// state={\n//     title:\"\",\n//     body:\"\"\n// }\n\n// // this will set the state on change in input fields\n// handleChange = (e)=>{\n//     this.setState({\n//         [e.target.id]: e.target.value\n//     })\n//     // setProject(Object.assign({},project,{[e.target.id]:e.target.value}))\n\n// }\n// handleSubmit =(e) =>{\n//     e.preventDefault();\n//     // when we click on submit it will use action\n//     //create project \n//     // const project_id= project.data.id;\n//     console.log(\"wfrer\")\n//     axios.post('http://localhost:3000/api/v1/projects.json',{[e.target.id]: e.target.value})\n//     .then(resp =>{\n//         console.log(\"Api Working\")\n//     })\n//     .catch(resp => {})\n//         console.log(\"kakaak\")\n//     // this.props.createProject(this.state)\n// }\n// render(){\n//     return(\n\n//         <div className=\"container\">\n//             <form onSubmit={this.handleSubmit} className=\"white\">\n//                 <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n//                 <div className=\"input-field\">\n//                     <label htmlFor=\"title\">Title</label>\n//                     <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n//                 </div>\n        \n//                 <div className=\"input-field\">\n//                     <label htmlFor=\"body\">Project Content</label>\n//                     <textarea className=\"materialize-textarea\" id=\"body\" onChange={this.handleChange}/>\n//                 </div>\n\n//                 <div className=\"input-field\">\n//                     <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Create</button>\n//                 </div>\n//             </form>\n//         </div>\n//         )\n//     }\n// }\n// // //when submit button is clicked it will run on projectActoin\n// // const mapDispatchToProps = (dispatch) =>{\n// //     return{\n// //         createProject: (project) => dispatch(createProject(project))\n// //     }\n// // }\n\n// // export default connect(null,mapDispatchToProps)(CreateProject)\n// export default CreateProject"]},"metadata":{},"sourceType":"module"}