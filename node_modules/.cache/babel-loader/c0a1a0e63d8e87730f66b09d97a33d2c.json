{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/react-firebase/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport ProjectIndex from '../layout/ProjectIndex';\nimport { connect } from 'react-redux'; //for data ldisplay from db\n\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport axios from 'axios';\n\nclass Dashboard extends Component {\n  //getting projects from store and passing as prop in PROJECTLIST\n  constructor(props) {\n    super(props);\n    this.state = {\n      project_modules: [{\n        id: 1,\n        title: \"wrjfb\",\n        body: \"ahhaha\",\n        user_id: \"\"\n      }, {\n        id: 2,\n        title: \"rtgrt\",\n        body: \"ahfhaha\",\n        user_id: \"1\"\n      } // {id:2,title:\"wrjfb\",body:\"ahhaha\"}\n      ]\n    };\n  }\n\n  componentDidMount() {\n    axios.get('localhost:3000/api/v1/projects').then(data => {\n      debugger;\n      let res = [];\n      data.data.data.map(data => {\n        res.push({\n          id: data.id,\n          title: data.title,\n          body: data.body,\n          user_id: data.user_id\n        });\n        this.setState({\n          project_modules: res\n        });\n      });\n    }).catch(data => {\n      debugger;\n    });\n  }\n\n  render() {\n    // const {projects} = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12 m6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"All Projects\"), /*#__PURE__*/React.createElement(ProjectIndex, {\n      project_modules: this.state.project_modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12 m5 offset-m1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })));\n  }\n\n} // const mapStateToProps = (state)=>{\n//     console.log(state);\n//     return{\n//         // This is the dummy data fetcher line.project is from rootReducer and projects from projectReducer\n//         // projects: state.project.projects\n//         projects: state.firestore.ordered.projects\n//     }\n// }\n// //passing function in connect and firestoreConnect will fetch data from db\n// export default compose(\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         {collection: 'projects'}\n//     ])\n// )(Dashboard)\n\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/dev/Desktop/react-firebase/src/components/dashboard/Dashboard.js"],"names":["React","Component","Notifications","ProjectList","ProjectIndex","connect","firestoreConnect","compose","axios","Dashboard","constructor","props","state","project_modules","id","title","body","user_id","componentDidMount","get","then","data","res","map","push","setState","catch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,SAAN,SAAwBR,SAAxB,CAAiC;AAC7B;AACAS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AAEXC,MAAAA,eAAe,EAAC,CACZ;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC,OAAZ;AAAoBC,QAAAA,IAAI,EAAC,QAAzB;AAAkCC,QAAAA,OAAO,EAAC;AAA1C,OADY,EAEZ;AAACH,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC,OAAZ;AAAoBC,QAAAA,IAAI,EAAC,SAAzB;AAAmCC,QAAAA,OAAO,EAAC;AAA3C,OAFY,CAIZ;AAJY;AAFL,KAAX;AAUH;;AACDC,EAAAA,iBAAiB,GAAE;AAClBV,IAAAA,KAAK,CAACW,GAAN,CAAU,gCAAV,EACCC,IADD,CACMC,IAAI,IAAI;AACX;AACD,UAAIC,GAAG,GAAC,EAAR;AAEAD,MAAAA,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeE,GAAf,CAAoBF,IAAD,IAAS;AAE1BC,QAAAA,GAAG,CAACE,IAAJ,CAAS;AAACV,UAAAA,EAAE,EAAEO,IAAI,CAACP,EAAV;AAAeC,UAAAA,KAAK,EAAEM,IAAI,CAACN,KAA3B;AAAkCC,UAAAA,IAAI,EAAEK,IAAI,CAACL,IAA7C;AAAmDC,UAAAA,OAAO,EAAEI,IAAI,CAACJ;AAAjE,SAAT;AACA,aAAKQ,QAAL,CAAc;AAACZ,UAAAA,eAAe,EAAES;AAAlB,SAAd;AAED,OALD;AAMD,KAXD,EAYCI,KAZD,CAYOL,IAAI,IAAI;AACZ;AACH,KAdA;AAeJ;;AAIGM,EAAAA,MAAM,GAAE;AACJ;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEA,oBAAC,YAAD;AAAc,MAAA,eAAe,EAAE,KAAKf,KAAL,CAAWC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ,eAOI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CADJ;AAeH;;AArD4B,C,CAwDjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeJ,SAAf","sourcesContent":["import React ,{Component} from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport ProjectIndex from '../layout/ProjectIndex'\nimport {connect} from 'react-redux'\n//for data ldisplay from db\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport axios from 'axios'\nclass Dashboard extends Component{\n    //getting projects from store and passing as prop in PROJECTLIST\n    constructor(props){\n        super(props)\n\n        this.state={\n\n        project_modules:[\n            {id:1,title:\"wrjfb\",body:\"ahhaha\",user_id:\"\"},\n            {id:2,title:\"rtgrt\",body:\"ahfhaha\",user_id:\"1\"},\n\n            // {id:2,title:\"wrjfb\",body:\"ahhaha\"}\n\n        ]\n        }\n    }\n    componentDidMount(){\n     axios.get('localhost:3000/api/v1/projects')\n     .then(data => {\n        debugger\n       let res=[]\n        \n       data.data.data.map((data) =>{\n\n         res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n         this.setState({project_modules: res})\n\n       })\n     })\n     .catch(data => {\n        debugger\n    })\n}\n\n\n\n    render(){\n        // const {projects} = this.props;\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <h3>All Projects</h3>\n                    <ProjectIndex project_modules={this.state.project_modules}/>\n\n                        {/* <ProjectList projects={projects}/> */}\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        {/* <Notifications /> */}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n// const mapStateToProps = (state)=>{\n//     console.log(state);\n//     return{\n//         // This is the dummy data fetcher line.project is from rootReducer and projects from projectReducer\n//         // projects: state.project.projects\n//         projects: state.firestore.ordered.projects\n//     }\n// }\n// //passing function in connect and firestoreConnect will fetch data from db\n// export default compose(\n//     connect(mapStateToProps),\n//     firestoreConnect([\n//         {collection: 'projects'}\n//     ])\n// )(Dashboard)\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}