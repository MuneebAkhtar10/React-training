{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/react-firebase/src/components/projects/CreateProject.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport ProjectCss from './ProjectCss.css';\nimport $ from 'jquery';\nexport default class CreateProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log([event.target.value]);\n    };\n\n    this.createPostRequest = event => {\n      axios.post('http://localhost:3000/api/v1/projects.json', {\n        method: 'post',\n        title: this.state.title,\n        body: this.state.des,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log({\n          title\n        });\n        alert('Project created successfully');\n        window.location.href = '/';\n      });\n    };\n\n    this.state = {\n      // post: [],\n      title: '',\n      des: ''\n    };\n  }\n\n  render() {\n    const {\n      title,\n      des\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 6\n      }\n    }, \"Create Post\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 8\n      }\n    }, \"Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: title,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 8\n      }\n    }, \"Description: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"des\",\n      value: des,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createPostRequest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }\n    }, \"Create\")) //     <div className=\"container\">\n    //     <form className=\"white\">\n    //         <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n    //         <div className=\"input-field\">\n    //         <label>Title: </label>\n    //         <input\n    //           ref=\"title\"\n    //           type='text'\n    //           name='title'\n    //           value={title}\n    //           onChange={this.handleInputChange}\n    //           />\n    //            </div>\n    //         <div className=\"input-field\">\n    //             <label >Desciprtion</label>\n    //             <input\n    //             ref=\"body\"\n    //             type='text'\n    //             name='des'\n    //             value={des}\n    //             onChange={this.handleInputChange}\n    //           />          \n    //           </div>\n    //         <div className=\"input-field\">\n    //             <button onClick={this.createPostRequest} className=\"btn pink lighten-1 z-depth-0\">Create</button>\n    //         </div>\n    //     </form>\n    // </div>\n    //   <div>\n    //     <h3>New Project</h3>\n    //     <div>\n    //       <label>Title: </label>\n    //       <input\n    //         ref=\"title\"\n    //         type='text'\n    //         name='title'\n    //         value={title}\n    //         onChange={this.handleInputChange}\n    //         />\n    //     </div>\n    //     <div>\n    //       <label>Description: </label>\n    //       <input\n    //         ref=\"body\"\n    //         type='text'\n    //         name='body'\n    //         value={body}\n    //         onChange={this.handleInputChange}\n    //         />\n    //     </div>\n    //     <button onClick={this.createPostRequest}>Create</button>\n    //   </div>\n    ;\n  }\n\n} // import React, {Component}from 'react'\n// import {Link} from 'react-router-dom'\n// import {connect} from 'react-redux'\n// //now using store actions \n// import {createProject} from '../../store/actions/projectActions'\n// import axios from 'axios'\n// class CreateProject extends Component {\n// state={\n//     title:\"\",\n//     body:\"\"\n// }\n// // this will set the state on change in input fields\n// handleChange = (e)=>{\n//     this.setState({\n//         [e.target.id]: e.target.value\n//     })\n//     // setProject(Object.assign({},project,{[e.target.id]:e.target.value}))\n// }\n// handleSubmit =(e) =>{\n//     e.preventDefault();\n//     // when we click on submit it will use action\n//     //create project \n//     // const project_id= project.data.id;\n//     console.log(\"wfrer\")\n//     axios.post('http://localhost:3000/api/v1/projects.json',{[e.target.id]: e.target.value})\n//     .then(resp =>{\n//         console.log(\"Api Working\")\n//     })\n//     .catch(resp => {})\n//         console.log(\"kakaak\")\n//     // this.props.createProject(this.state)\n// }\n// render(){\n//     return(\n//         <div className=\"container\">\n//             <form onSubmit={this.handleSubmit} className=\"white\">\n//                 <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n//                 <div className=\"input-field\">\n//                     <label htmlFor=\"title\">Title</label>\n//                     <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n//                 </div>\n//                 <div className=\"input-field\">\n//                     <label htmlFor=\"body\">Project Content</label>\n//                     <textarea className=\"materialize-textarea\" id=\"body\" onChange={this.handleChange}/>\n//                 </div>\n//                 <div className=\"input-field\">\n//                     <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Create</button>\n//                 </div>\n//             </form>\n//         </div>\n//         )\n//     }\n// }\n// // //when submit button is clicked it will run on projectActoin\n// // const mapDispatchToProps = (dispatch) =>{\n// //     return{\n// //         createProject: (project) => dispatch(createProject(project))\n// //     }\n// // }\n// // export default connect(null,mapDispatchToProps)(CreateProject)\n// export default CreateProject","map":{"version":3,"sources":["/home/dev/Desktop/react-firebase/src/components/projects/CreateProject.js"],"names":["React","Redirect","axios","ProjectCss","$","CreateProject","Component","constructor","props","handleInputChange","event","setState","target","name","value","console","log","createPostRequest","post","method","title","state","body","des","headers","then","response","alert","window","location","href","render"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,eAAe,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,iBATmB,GASEC,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AAAE,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAApC,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,CAACN,KAAK,CAACE,MAAN,CAAaE,KAAd,CAAZ;AACD,KAZkB;;AAAA,SAkEjBG,iBAlEiB,GAkEIP,KAAD,IAAW;AAE9BR,MAAAA,KAAK,CAACgB,IAAN,CAAW,4CAAX,EACA;AACGC,QAAAA,MAAM,EAAE,MADX;AAEGC,QAAAA,KAAK,EAAG,KAAKC,KAAL,CAAWD,KAFtB;AAGGE,QAAAA,IAAI,EAAG,KAAKD,KAAL,CAAWE,GAHrB;AAKGC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AALZ,OADA,EAQMC,IARN,CAQYC,QAAD,IAAc;AACtBX,QAAAA,OAAO,CAACC,GAAR,CAAY;AAACI,UAAAA;AAAD,SAAZ;AACAO,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACC,OAZJ;AAaA,KAjFgB;;AAEjB,SAAKT,KAAL,GAAa;AACX;AACAD,MAAAA,KAAK,EAAE,EAFI;AAGXG,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKD;;AA4EDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAACX,MAAAA,KAAD;AAAQG,MAAAA;AAAR,QAAe,KAAKF,KAA1B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHC,eAID;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAED,KAHT;AAIE,MAAA,QAAQ,EAAE,KAAKX,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAJC,eAaD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,KAAK,EAAEc,GAHT;AAIE,MAAA,QAAQ,EAAE,KAAKd,iBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAbC,eAuBD;AAAQ,MAAA,OAAO,EAAE,KAAKQ,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBC,CADF,CAgCF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvFA;AAyFD;;AA/KwD,C,CA4M3D;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["\nimport React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport axios from 'axios'\nimport ProjectCss from './ProjectCss.css'\nimport $ from 'jquery';\n\nexport default class CreateProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // post: [],\n      title: '',\n      des: '',\n     }\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n    console.log([event.target.value])\n  }\n\n//   createPostRequest = (event) => {\n//     console.log('this.state', this.state);\n//     axios.get(`http://localhost:3000/api/v1/projects`,{method: 'post',\n//     body: JSON.stringify(this.state),\n//     headers: { 'Content-Type': 'application/json' },\n//     })\n//     .then(data => {\n\n//     let res=[]\n//     console.log(res)\n//     data.map((data) =>{\n\n//     res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n//     this.setState({post: res})\n//     })\n//     })\n//     .catch(data => {  \n//         debugger\n//         })\n//     }\n\n    // handleClick() {\n    //     var title = this.type.title.value;\n    //     var body = this.type.body.value;\n    //     $.ajax({\n    //         url: \"http://localhost:3000/api/v1/projects\",\n    //         type: \"POST\",\n    //         data: { project: { title: title, body: body } },\n    //         success: response => {\n    //         console.log(\"it worked!\", response);\n    //         }\n    //     });\n    // }\n\n\n    // componentDidMount() {\n    //   axios.post('http://localhost:3000/api/v1/projects',\n    //   {  \n    //      method: 'post',\n    //      body: JSON.stringify(this.state),\n    //      headers: { 'Content-Type': 'application/json' \n    //      },\n    //      }).then((response) => {\n    //      console.log(this.state)\n \n    //      alert('Project created successfully');\n    //      window.location.href = '/';\n    //      }); \n    // }\n  \n\n\n    createPostRequest = (event) => {\n      \n     axios.post('http://localhost:3000/api/v1/projects.json',\n     {  \n        method: 'post',\n        title: (this.state.title),\n        body: (this.state.des),\n        \n        headers: { 'Content-Type': 'application/json' \n        },\n        }).then((response) => {\n        console.log({title})\n        alert('Project created successfully');\n        window.location.href = '/';\n        }); \n    }  \n\n  render() {\n    const {title, des} = this.state;\n    return (\n      <div>\n      {/* {this.change} */}\n\n     <h4>Create Post</h4>\n     <div>\n       <label>Title: </label>\n       <input\n         type='text'\n         name='title'\n         value={title}\n         onChange={this.handleInputChange}\n         />\n     </div>\n     <div>\n       <label>Description: </label>\n       <input\n         type='text'\n         name='des'\n         value={des}\n         onChange={this.handleInputChange}\n         />\n     </div>\n\n     <button onClick={this.createPostRequest}>Create</button>\n   </div>\n\n\n\n\n\n\n  //     <div className=\"container\">\n  //     <form className=\"white\">\n  //         <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n  //         <div className=\"input-field\">\n  //         <label>Title: </label>\n  //         <input\n  //           ref=\"title\"\n  //           type='text'\n  //           name='title'\n  //           value={title}\n  //           onChange={this.handleInputChange}\n  //           />\n  //            </div>\n  \n  //         <div className=\"input-field\">\n  //             <label >Desciprtion</label>\n  //             <input\n  //             ref=\"body\"\n  //             type='text'\n  //             name='des'\n  //             value={des}\n  //             onChange={this.handleInputChange}\n  //           />          \n  //           </div>\n\n  //         <div className=\"input-field\">\n  //             <button onClick={this.createPostRequest} className=\"btn pink lighten-1 z-depth-0\">Create</button>\n  //         </div>\n  //     </form>\n  // </div>\n\n\n    //   <div>\n    //     <h3>New Project</h3>\n    //     <div>\n    //       <label>Title: </label>\n    //       <input\n    //         ref=\"title\"\n    //         type='text'\n    //         name='title'\n    //         value={title}\n    //         onChange={this.handleInputChange}\n    //         />\n    //     </div>\n    //     <div>\n    //       <label>Description: </label>\n    //       <input\n    //         ref=\"body\"\n    //         type='text'\n    //         name='body'\n    //         value={body}\n    //         onChange={this.handleInputChange}\n    //         />\n    //     </div>\n    //     <button onClick={this.createPostRequest}>Create</button>\n    //   </div>\n     );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, {Component}from 'react'\n// import {Link} from 'react-router-dom'\n\n// import {connect} from 'react-redux'\n// //now using store actions \n// import {createProject} from '../../store/actions/projectActions'\n// import axios from 'axios'\n\n\n// class CreateProject extends Component {\n// state={\n//     title:\"\",\n//     body:\"\"\n// }\n\n// // this will set the state on change in input fields\n// handleChange = (e)=>{\n//     this.setState({\n//         [e.target.id]: e.target.value\n//     })\n//     // setProject(Object.assign({},project,{[e.target.id]:e.target.value}))\n\n// }\n// handleSubmit =(e) =>{\n//     e.preventDefault();\n//     // when we click on submit it will use action\n//     //create project \n//     // const project_id= project.data.id;\n//     console.log(\"wfrer\")\n//     axios.post('http://localhost:3000/api/v1/projects.json',{[e.target.id]: e.target.value})\n//     .then(resp =>{\n//         console.log(\"Api Working\")\n//     })\n//     .catch(resp => {})\n//         console.log(\"kakaak\")\n//     // this.props.createProject(this.state)\n// }\n// render(){\n//     return(\n\n//         <div className=\"container\">\n//             <form onSubmit={this.handleSubmit} className=\"white\">\n//                 <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n//                 <div className=\"input-field\">\n//                     <label htmlFor=\"title\">Title</label>\n//                     <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n//                 </div>\n        \n//                 <div className=\"input-field\">\n//                     <label htmlFor=\"body\">Project Content</label>\n//                     <textarea className=\"materialize-textarea\" id=\"body\" onChange={this.handleChange}/>\n//                 </div>\n\n//                 <div className=\"input-field\">\n//                     <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Create</button>\n//                 </div>\n//             </form>\n//         </div>\n//         )\n//     }\n// }\n// // //when submit button is clicked it will run on projectActoin\n// // const mapDispatchToProps = (dispatch) =>{\n// //     return{\n// //         createProject: (project) => dispatch(createProject(project))\n// //     }\n// // }\n\n// // export default connect(null,mapDispatchToProps)(CreateProject)\n// export default CreateProject"]},"metadata":{},"sourceType":"module"}