{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/react-firebase/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport ProjectIndex from '../layout/ProjectIndex';\nimport { connect } from 'react-redux'; //for data ldisplay from db\n\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport axios from 'axios';\n\nclass Dashboard extends Component {\n  //getting projects from store and passing as prop in PROJECTLIST\n  constructor(props) {\n    super(props);\n    this.state = {\n      project_modules: [// {id:1,title:\"wrjfb\",body:\"ahhaha\"},\n        // {id:2,title:\"wrjfb\",body:\"ahhaha\"}\n      ]\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/localhost:3000/api/v1/projects').then(data => data.json()).then(data => {\n      let res = [];\n      console.log(res);\n      data.data.data.map(data => {\n        res.push({\n          id: data.id,\n          title: data.title,\n          body: data.body,\n          user_id: data.user_id\n        });\n        this.setState({\n          project_modules: res\n        });\n      });\n    }).catch(data => {});\n  }\n\n  render() {\n    // const {projects} = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12 m6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ProjectIndex, {\n      project_modules: this.state.project_modules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12 m5 offset-m1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Notifications, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    // This is the dummy data fetcher line.project is from rootReducer and projects from projectReducer\n    // projects: state.project.projects\n    projects: state.firestore.ordered.projects\n  };\n}; //passing function in connect and firestoreConnect will fetch data from db\n\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]))(Dashboard);","map":{"version":3,"sources":["/home/dev/Desktop/react-firebase/src/components/dashboard/Dashboard.js"],"names":["React","Component","Notifications","ProjectList","ProjectIndex","connect","firestoreConnect","compose","axios","Dashboard","constructor","props","state","project_modules","componentDidMount","get","then","data","json","res","console","log","map","push","id","title","body","user_id","setState","catch","render","mapStateToProps","projects","firestore","ordered","collection"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,SAAN,SAAwBR,SAAxB,CAAiC;AAC7B;AACAS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AAEXC,MAAAA,eAAe,EAAC,CACZ;AACA;AAFY;AAFL,KAAX;AAQH;;AACDC,EAAAA,iBAAiB,GAAE;AAClBN,IAAAA,KAAK,CAACO,GAAN,CAAU,iCAAV,EACCC,IADD,CACOC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADf,EAECF,IAFD,CAEMC,IAAI,IAAI;AACZ,UAAIE,GAAG,GAAC,EAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEAF,MAAAA,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeK,GAAf,CAAoBL,IAAD,IAAS;AAE1BE,QAAAA,GAAG,CAACI,IAAJ,CAAS;AAACC,UAAAA,EAAE,EAAEP,IAAI,CAACO,EAAV;AAAeC,UAAAA,KAAK,EAAER,IAAI,CAACQ,KAA3B;AAAkCC,UAAAA,IAAI,EAAET,IAAI,CAACS,IAA7C;AAAmDC,UAAAA,OAAO,EAAEV,IAAI,CAACU;AAAjE,SAAT;AACA,aAAKC,QAAL,CAAc;AAACf,UAAAA,eAAe,EAAEM;AAAlB,SAAd;AAED,OALD;AAMD,KAZD,EAaCU,KAbD,CAaOZ,IAAI,IAAI,CAEf,CAfA;AAgBJ;;AAIGa,EAAAA,MAAM,GAAE;AACJ;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AAAc,MAAA,eAAe,EAAE,KAAKlB,KAAL,CAAWC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,eAMI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,CADJ,CADJ;AAcH;;AAnD4B;;AAsDjC,MAAMkB,eAAe,GAAInB,KAAD,IAAS;AAC7BQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,SAAM;AACF;AACA;AACAoB,IAAAA,QAAQ,EAAEpB,KAAK,CAACqB,SAAN,CAAgBC,OAAhB,CAAwBF;AAHhC,GAAN;AAKH,CAPD,C,CAQA;;;AACA,eAAezB,OAAO,CAClBF,OAAO,CAAC0B,eAAD,CADW,EAElBzB,gBAAgB,CAAC,CACb;AAAC6B,EAAAA,UAAU,EAAE;AAAb,CADa,CAAD,CAFE,CAAP,CAKb1B,SALa,CAAf","sourcesContent":["import React ,{Component} from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport ProjectIndex from '../layout/ProjectIndex'\nimport {connect} from 'react-redux'\n//for data ldisplay from db\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport axios from 'axios'\nclass Dashboard extends Component{\n    //getting projects from store and passing as prop in PROJECTLIST\n    constructor(props){\n        super(props)\n\n        this.state={\n\n        project_modules:[\n            // {id:1,title:\"wrjfb\",body:\"ahhaha\"},\n            // {id:2,title:\"wrjfb\",body:\"ahhaha\"}\n\n        ]\n        }\n    }\n    componentDidMount(){\n     axios.get('/localhost:3000/api/v1/projects')\n     .then (data => data.json())\n     .then(data => {\n       let res=[]\n       console.log(res)\n\n       data.data.data.map((data) =>{\n\n         res.push({id: data.id , title: data.title, body: data.body, user_id: data.user_id})\n         this.setState({project_modules: res})\n\n       })\n     })\n     .catch(data => {\n  \n    })\n}\n\n\n\n    render(){\n        // const {projects} = this.props;\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                    <ProjectIndex project_modules={this.state.project_modules}/>\n\n                        {/* <ProjectList projects={projects}/> */}\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    console.log(state);\n    return{\n        // This is the dummy data fetcher line.project is from rootReducer and projects from projectReducer\n        // projects: state.project.projects\n        projects: state.firestore.ordered.projects\n    }\n}\n//passing function in connect and firestoreConnect will fetch data from db\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)(Dashboard)"]},"metadata":{},"sourceType":"module"}