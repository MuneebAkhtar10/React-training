{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/react-firebase/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker'; //redux part\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'; //Now we will use provider so that application can use our store\n\nimport { Provider } from 'react-redux'; //thunk is basically a middleware\n\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'; //applymiddleware takes list to interact with db\n//we are using compose to add extra argument \n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(), reactReduxFirebase())); //////\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/dev/Desktop/react-firebase/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","reduxFirestore","getFirestore","reactReduxFirebase","getFirebase","store","withExtraArgument","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CACA;;AACA,SAAQC,WAAR,EAAoBC,eAApB,EAAoCC,OAApC,QAAkD,OAAlD;AACA,OAAOC,WAAP,MAAwB,8BAAxB,C,CACA;;AACA,SAAQC,QAAR,QAAuB,aAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,cAAR,EAAuBC,YAAvB,QAA0C,iBAA1C;AACA,SAAQC,kBAAR,EAA2BC,WAA3B,QAA6C,sBAA7C,C,CAEA;AACA;;AACA,MAAMC,KAAK,GAAGV,WAAW,CAACG,WAAD,EACvBD,OAAO,CACPD,eAAe,CAACI,KAAK,CAACM,iBAAN,CAAwB;AAACF,EAAAA,WAAD;AAAaF,EAAAA;AAAb,CAAxB,CAAD,CADR,EAEPD,cAAc,EAFP,EAGPE,kBAAkB,EAHX,CADgB,CAAzB,C,CAQA;;AAEAX,QAAQ,CAACe,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOAf,aAAa,CAACgB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n//redux part\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\n//Now we will use provider so that application can use our store\nimport {Provider} from 'react-redux'\n//thunk is basically a middleware\nimport thunk from 'redux-thunk'\nimport {reduxFirestore,getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase,getFirebase} from 'react-redux-firebase'\n\n//applymiddleware takes list to interact with db\n//we are using compose to add extra argument \nconst store = createStore(rootReducer,\n  compose(\n  applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n  reduxFirestore(),\n  reactReduxFirebase()\n\n  )\n);\n//////\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}