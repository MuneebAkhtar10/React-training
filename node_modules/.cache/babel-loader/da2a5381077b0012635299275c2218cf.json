{"ast":null,"code":"import { firestore } from \"firebase\";\nexport const createProject = project => {\n  return (dispath, getState, {\n    getFirestore\n  }) => {\n    //make async calls to db\n    const firestore = getFirestore(); //projects here is the name of collection\n\n    firestore.Collection('projects').add({ ...project,\n      authorName: \"Muneeb\",\n      authorId: 12345,\n      createdAt: new Date()\n    }).then(() => {\n      dispath({\n        type: 'CREATE_PROJECT',\n        project\n      });\n    }).catch(err => {\n      dispath({\n        type: 'CREATE_PROJECT_ERROR',\n        err\n      });\n    });\n  };\n}; //without firebase\n// dispath({\n//     type:'CREATE_PROJECT', project});","map":{"version":3,"sources":["/home/dev/Desktop/react-firebase/src/store/actions/projectActions.js"],"names":["firestore","createProject","project","dispath","getState","getFirestore","Collection","add","authorName","authorId","createdAt","Date","then","type","catch","err"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAY;AACrC,SAAO,CAACC,OAAD,EAASC,QAAT,EAAkB;AAACC,IAAAA;AAAD,GAAlB,KAAoC;AACvC;AAEA,UAAML,SAAS,GAAGK,YAAY,EAA9B,CAHuC,CAIvC;;AACAL,IAAAA,SAAS,CAACM,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,CAAqC,EACjC,GAAGL,OAD8B;AAEjCM,MAAAA,UAAU,EAAE,QAFqB;AAGjCC,MAAAA,QAAQ,EAAE,KAHuB;AAIjCC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAJsB,KAArC,EAMGC,IANH,CAMQ,MAAK;AAAET,MAAAA,OAAO,CAAC;AACnBU,QAAAA,IAAI,EAAC,gBADc;AACIX,QAAAA;AADJ,OAAD,CAAP;AAEd,KARD,EAQGY,KARH,CAQUC,GAAD,IAAS;AACdZ,MAAAA,OAAO,CAAC;AAACU,QAAAA,IAAI,EAAE,sBAAP;AAA+BE,QAAAA;AAA/B,OAAD,CAAP;AACH,KAVD;AAWH,GAhBD;AAiBH,CAlBM,C,CAoBP;AACA;AACA","sourcesContent":["import { firestore } from \"firebase\";\n\nexport const createProject = (project) =>{\n    return (dispath,getState,{getFirestore}) =>{\n        //make async calls to db\n\n        const firestore = getFirestore();\n        //projects here is the name of collection\n        firestore.Collection('projects').add({\n            ...project,\n            authorName: \"Muneeb\",\n            authorId: 12345,\n            createdAt: new Date()\n\n        }).then(()=> { dispath({\n            type:'CREATE_PROJECT', project});\n        }).catch((err) => {\n            dispath({type: 'CREATE_PROJECT_ERROR', err})\n        })\n    }\n};\n\n//without firebase\n// dispath({\n//     type:'CREATE_PROJECT', project});"]},"metadata":{},"sourceType":"module"}